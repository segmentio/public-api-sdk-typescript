/**
 * Segment Public API
 * The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.
 *
 * The version of the OpenAPI document: 59.1.0
 * Contact: friends@segment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
 * Compute conditions wrapper for beta API.
 */
export class ComputeConditionsWrapper {
    /**
     * The query format.
     */
    'format': ComputeConditionsWrapper.FormatEnum;
    /**
     * The query language string or AST object defining the audience segmentation criteria. When format is \'AST\', this should be an object. When format is \'CQL\', this should be a string. Validation is handled at the business logic level due to conditional nature.
     */
    'conditions': object | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }> = [
        {
            name: 'format',
            baseName: 'format',
            type: 'ComputeConditionsWrapper.FormatEnum',
        },
        {
            name: 'conditions',
            baseName: 'conditions',
            type: 'object',
        },
    ];

    static getAttributeTypeMap() {
        return ComputeConditionsWrapper.attributeTypeMap;
    }
}

export namespace ComputeConditionsWrapper {
    export enum FormatEnum {
        AST = <any>'AST',
        CQL = <any>'CQL',
    }
}
