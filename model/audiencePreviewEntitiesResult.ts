/**
 * Segment Public API
 * The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.
 *
 * The version of the OpenAPI document: 59.7.0
 * Contact: friends@segment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Profile } from './profile';

/**
 * Result membership object for an audience preview with `audienceType: USERS` or `audienceType: LINKED`.
 */
export class AudiencePreviewEntitiesResult {
    /**
     * Entity id.
     */
    'id': string;
    /**
     * The entity primary key column name.
     */
    'idProperty': string;
    /**
     * The entity relationship slug.
     */
    'relationshipSlug': string;
    /**
     * Entity properties.
     */
    'properties'?: { [key: string]: any };
    /**
     * Related entities that are one level deeper will only be returned if those entities are referenced in the audience definition.
     */
    'entities'?: { [key: string]: any };
    /**
     * Related list of profiles.
     */
    'profiles'?: Array<Profile>;
    /**
     * Indicates if only a subset of the profiles associated with the entity were returned.
     */
    'profilesTruncated': boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }> = [
        {
            name: 'id',
            baseName: 'id',
            type: 'string',
        },
        {
            name: 'idProperty',
            baseName: 'idProperty',
            type: 'string',
        },
        {
            name: 'relationshipSlug',
            baseName: 'relationshipSlug',
            type: 'string',
        },
        {
            name: 'properties',
            baseName: 'properties',
            type: '{ [key: string]: any; }',
        },
        {
            name: 'entities',
            baseName: 'entities',
            type: '{ [key: string]: any; }',
        },
        {
            name: 'profiles',
            baseName: 'profiles',
            type: 'Array<Profile>',
        },
        {
            name: 'profilesTruncated',
            baseName: 'profilesTruncated',
            type: 'boolean',
        },
    ];

    static getAttributeTypeMap() {
        return AudiencePreviewEntitiesResult.attributeTypeMap;
    }
}
